{
  "openapi": "3.0.0",
  "info": {
    "title": "geek_script",
    "description": "An API for a basic ecommerce themed around nerdy products. The final project of [Gama Academy](https://gama.academy/) webdevelopment course. Current version is still in development.\n\nUseful links:\n  - [Backend project repository](https://github.com/tiagospeckart/geekstore-backend)\n  - [Frontend project repository](https://github.com/GabrielGameDev/geek-script-front)",
    "contact": {
      "name": "API Support",
      "email": "tiagospeckart@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit/"
    },
    "version": "1.1.2"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Localhost for Development"
    }
  ],
  "tags": [
    {
      "name": "Register",
      "description": "Create a Client account"
    },
    {
      "name": "Login",
      "description": "Log into the system with your account"
    },
    {
      "name": "User",
      "description": "Operations for users"
    },
    {
      "name": "Product",
      "description": "Finding products and adding them to the cart"
    },
    {
      "name": "Purchase",
      "description": "Buying selected products"
    },
    {
      "name": "Category",
      "description": "Categories for products"
    },
    {
      "name": "Discount",
      "description": "Discount coupons for purchases"
    },
    {
      "name": "Admin",
      "description": "Admin endpoints"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Login route",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "example": {
                "email": "admin@admin.com",
                "password": "admin123"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sucessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZF91c2VyIjoxLCJuYW1lIjoiYWRtaW4iLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsInNjb3BlIjoiYWRtaW4iLCJpYXQiOjE2NzgxNDM1OTksImV4cCI6MTY4MDczNTU5OX0.W4bI0RxLCQAGWzo0uQNwc9B0G5p6nWGbTwwAdTGnAqA"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Invalid e-mail or password, please try again"
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to generate a token"
              }
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "Register",
          "User"
        ],
        "summary": "Creates a new User",
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "name": "Test Name",
                "email": "test@email.com",
                "password": "testpass123"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to register user"
              }
            }
          },
          "409": {
            "description": "Duplicated Entry",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "E-mail already registered"
              }
            }
          }
        }
      }
    },
    "/user/{id_user}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Returns a User by ID",
        "operationId": "getOneUser",
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id_user": 3,
                  "name": "Test Name",
                  "email": "test@email.com",
                  "password": "testpass123",
                  "isAdm": 0,
                  "createdAt": "2023-02-24T13:01:02.700Z",
                  "updatedAt": "2023-02-24T13:01:02.700Z"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "ID not found"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Updates a User by ID",
        "operationId": "updateOneUser",
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id_user": 3,
                  "name": "Tester Alter",
                  "email": "email@tester.com",
                  "password": "$2a$10$1Rih7rJk0iWrK0zK.Zfxwu7ADhZW5c1kWQMrEtHx.d4Jb/ekHUpuK",
                  "isAdm": 0,
                  "createdAt": "2023-02-24T13:01:02.700Z",
                  "updatedAt": "2023-02-24T13:01:02.700Z"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "ID not found"
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to update data"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Updates a User by ID",
        "operationId": "deleteOneUser",
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request recieved and understood, but no need to send data back"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "ID not found"
              }
            }
          },
          "500": {
            "description": "Unable to delete data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to delete data"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/admin": {
      "get": {
        "tags": [
          "Admin",
          "User"
        ],
        "summary": "Returns a list of Users",
        "operationId": "getAllUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayUser"
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to perform this action"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/product/catalog/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Returns a list of Products with option to select by Category",
        "operationId": "getProducts",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Valid category name as query parameter to select a few products",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayProduct"
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to perform this action"
              }
            }
          }
        }
      }
    },
    "/product/{id_product}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Returns a Product object",
        "operationId": "getOneProduct",
        "parameters": [
          {
            "name": "id_product",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "ID not found"
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to perform this action"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/product/admin": {
      "post": {
        "tags": [
          "Product",
          "Admin"
        ],
        "summary": "Creates a new Product",
        "operationId": "createProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "name": "string",
                "photo": "string",
                "price": 34.12,
                "description": "string",
                "category_id": 1
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to register product"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/product/admin/{id_product}": {
      "put": {
        "tags": [
          "Product",
          "Admin"
        ],
        "summary": "Updates a Product",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "id_product",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              },
              "example": {
                "price": 390.12
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "ID not found"
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to update data"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Product",
          "Admin"
        ],
        "summary": "Deletes a Product",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "id_product",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request recieved and understood, but no need to send data back"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "ID not found"
              }
            }
          },
          "500": {
            "description": "Unable to delete data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to delete data"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/checkout": {
      "post": {
        "tags": [
          "Purchase"
        ],
        "summary": "Checkout page",
        "operationId": "checkout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Checkout"
              },
              "example": {
                "purchaseTotal": "458.23",
                "purchaseIdList": [
                  1,
                  2
                ],
                "discountName": "coupon15"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Checkout"
                }
              }
            }
          },
          "400": {
            "description": "Unable to complete the purchase",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to complete the purchase"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/purchase/{id_user}": {
      "get": {
        "tags": [
          "Purchase"
        ],
        "summary": "Returns an user object containing an array of purchases made by user",
        "operationId": "getClientPurchases",
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "ID not found"
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to perform this action"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/purchase/admin": {
      "get": {
        "tags": [
          "Purchase",
          "Admin"
        ],
        "summary": "Returns an array of Purchases",
        "operationId": "getAllPurchases",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayPurchase"
                },
                "example": [
                  {
                    "id_purchase": 1,
                    "user_id": 1,
                    "total": "393.73",
                    "createdAt": "2023-02-27T21:29:52.000Z",
                    "updatedAt": "2023-02-27T21:29:52.000Z",
                    "User": {
                      "id_user": 1,
                      "name": "admin"
                    }
                  },
                  {
                    "id_purchase": 2,
                    "user_id": 2,
                    "total": "558.85",
                    "createdAt": "2023-02-27T21:29:52.000Z",
                    "updatedAt": "2023-02-27T21:29:52.000Z",
                    "User": {
                      "id_user": 2,
                      "name": "Cliente Teste"
                    }
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to perform this action"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/purchase/admin/{id_purchase}": {
      "put": {
        "tags": [
          "Purchase",
          "Admin"
        ],
        "summary": "Updates a Purchase",
        "operationId": "updatePurchase",
        "parameters": [
          {
            "name": "id_purchase",
            "in": "path",
            "description": "Purchase ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Purchase"
              },
              "example": {
                "total": 390.12
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase"
                },
                "example": {
                  "id_purchase": 1,
                  "user_id": 1,
                  "total": "393.73",
                  "createdAt": "2023-02-27T21:29:52.000Z",
                  "updatedAt": "2023-02-27T21:29:52.000Z",
                  "User": {
                    "id_user": 1,
                    "name": "admin"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "ID not found"
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to update data"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Purchase",
          "Admin"
        ],
        "summary": "Deletes a Purchase",
        "operationId": "deletePurchase",
        "parameters": [
          {
            "name": "id_purchase",
            "in": "path",
            "description": "Purchase ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request recieved and understood, but no need to send data back"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "ID not found"
              }
            }
          },
          "500": {
            "description": "Unable to delete data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to delete data"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/category/catalog": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Returns all Categories as an array of objects",
        "operationId": "getAllCategory",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayCategory"
                },
                "example": [
                  {
                    "id_category": 1,
                    "name": "Vestuário",
                    "createdAt": "2023-02-24T13:01:02.700Z",
                    "updatedAt": "2023-02-24T13:01:02.700Z"
                  },
                  {
                    "id_category": 2,
                    "name": "Games",
                    "createdAt": "2023-02-24T13:01:02.700Z",
                    "updatedAt": "2023-02-24T13:01:02.700Z"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to perform this action"
              }
            }
          }
        }
      }
    },
    "/category/{id_category}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Returns a Category by ID",
        "operationId": "getOneCategory",
        "parameters": [
          {
            "name": "id_category",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                },
                "example": {
                  "id_category": 1,
                  "name": "Jogos de Tabuleiro",
                  "createdAt": "2023-02-24T13:01:02.700Z",
                  "updatedAt": "2023-02-24T13:01:02.700Z"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "ID not found"
              }
            }
          }
        }
      }
    },
    "/category/admin": {
      "post": {
        "tags": [
          "Category",
          "Admin"
        ],
        "summary": "Creates a new Category",
        "operationId": "createCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              },
              "example": {
                "name": "Board Game"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                },
                "example": {
                  "id_category": 3,
                  "name": "Board Game",
                  "createdAt": "2023-02-24T13:01:02.700Z",
                  "updatedAt": "2023-02-24T13:01:02.700Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to register category"
              }
            }
          },
          "409": {
            "description": "Category already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Category already exists"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/category/admin/{id_category}": {
      "put": {
        "tags": [
          "Category",
          "Admin"
        ],
        "summary": "Updates a Category by ID",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id_category",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              },
              "example": {
                "name": "Board Game"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "ID not found"
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to update data"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Category",
          "Admin"
        ],
        "summary": "Deletes a Category by ID",
        "operationId": "removeCategory",
        "parameters": [
          {
            "name": "id_category",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Request recieved and understood, but no need to send data back"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "ID not found"
              }
            }
          },
          "500": {
            "description": "Unable to delete data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to delete data"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/discount/admin/": {
      "get": {
        "tags": [
          "Discount",
          "Admin"
        ],
        "summary": "Returns all Discounts as an array of objects",
        "operationId": "getAllDiscounts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayDiscount"
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to perform this action"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Discount",
          "Admin"
        ],
        "summary": "Creates a new Discount",
        "operationId": "createDiscount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Discount"
              },
              "example": {
                "name": "coupon15",
                "value": 15
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to register discount"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/discount/admin/{id_discount}": {
      "get": {
        "tags": [
          "Discount",
          "Admin"
        ],
        "summary": "Returns a Discount by ID",
        "operationId": "getOneDiscount",
        "parameters": [
          {
            "name": "id_discount",
            "in": "path",
            "description": "Discount ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "ID not found"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Discount",
          "Admin"
        ],
        "summary": "Updates a Discount by ID",
        "operationId": "updateDiscount",
        "parameters": [
          {
            "name": "id_discount",
            "in": "path",
            "description": "Discount ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Discount"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "ID not found"
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to update data"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Discount",
          "Admin"
        ],
        "summary": "Deletes a Discount by ID",
        "operationId": "removeDiscount",
        "parameters": [
          {
            "name": "id_discount",
            "in": "path",
            "description": "Discount ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Request recieved and understood, but no need to send data back"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "ID not found"
              }
            }
          },
          "500": {
            "description": "Unable to delete data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "Unable to delete data"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "email",
          "name",
          "password"
        ],
        "type": "object",
        "properties": {
          "id_user": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "scope": {
            "type": "string"
          }
        }
      },
      "Login": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "Category": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id_category": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Product": {
        "required": [
          "category_id",
          "description",
          "name",
          "photo",
          "price"
        ],
        "type": "object",
        "properties": {
          "id_product": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "description": {
            "type": "string"
          },
          "category_id": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Purchase": {
        "required": [
          "total",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "id_purchase": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "user_id": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "discount_id": {
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "total": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "Discount": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "id_discount": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "Checkout": {
        "required": [
          "purchaseIdList",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "format": "integer"
          },
          "purchaseIdList": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "discount_id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ArrayUser": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "ArrayCategory": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Category"
        }
      },
      "ArrayProduct": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Product"
        }
      },
      "ArrayPurchase": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Purchase"
        }
      },
      "ArrayDiscount": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Discount"
        }
      },
      "Error": {
        "required": [
          "message"
        ],
        "type": "string",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "DeleteError": {
        "description": "Unable to delete data",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": "Unable to delete data"
          }
        }
      },
      "DeleteSuccess": {
        "description": "Request recieved and understood, but no need to send data back"
      },
      "CheckoutReg": {
        "description": "Failed to create new purchase",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": "Failed to create new purchase"
          }
        }
      },
      "CheckoutError": {
        "description": "Unable to complete the purchase",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": "Unable to complete the purchase"
          }
        }
      },
      "ExistCategory": {
        "description": "Category already exists",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": "Category already exists"
          }
        }
      },
      "ExistEmail": {
        "description": "Duplicated Entry",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": "E-mail already registered"
          }
        }
      },
      "IdNotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": "ID not found"
          }
        }
      },
      "InvalidData": {
        "description": "Unauthorised",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": "Invalid e-mail or password, please try again"
          }
        }
      },
      "RegisterCategory": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": "Unable to register category"
          }
        }
      },
      "RegisterProduct": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": "Unable to register product"
          }
        }
      },
      "RegisterUser": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": "Unable to register user"
          }
        }
      },
      "RegisterPurchase": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": "Unable to register purchase"
          }
        }
      },
      "RegisterDiscount": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": "Unable to register discount"
          }
        }
      },
      "SearchDb": {
        "description": "Server side error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": "Unable to perform this action"
          }
        }
      },
      "Token": {
        "description": "Server side error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": "Unable to generate a token"
          }
        }
      },
      "UpdateRegister": {
        "description": "Server side error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": "Unable to update data"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
