{
  "openapi": "3.0.0",
  "info": {
    "title": "geek_script",
    "description": "An API for a basic ecommerce themed around nerdy products. The final project of [Gama Academy](https://gama.academy/) webdevelopment course. Current version is still in development.\n\nUseful links:\n  - [Backend project repository](https://github.com/tiagospeckart/geekstore-backend)\n  - [Frontend project repository](https://github.com/GabrielGameDev/geek-script-front)",
    "contact": {
      "name": "API Support",
      "email": "tiagospeckart@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit/"
    },
    "version": "1.0.5"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Localhost for Development"
    }
  ],
  "tags": [
    {
      "name": "Register",
      "description": "Create a Client account"
    },
    {
      "name": "Login",
      "description": "Log into the system with your account"
    },
    {
      "name": "User",
      "description": "Operations for users"
    },
    {
      "name": "Product",
      "description": "Finding products and adding them to the cart"
    },
    {
      "name": "Purchase",
      "description": "Buying selected products"
    },
    {
      "name": "Category",
      "description": "Categories for products"
    },
    {
      "name": "Admin",
      "description": "Admin panel interfaces"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Login route",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sucessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZF91c2VyIjoxLCJuYW1lIjoiYWRtaW4iLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImlzQWRtIjoxLCJpYXQiOjE2Nzc0NTM3OTYsImV4cCI6MTY4MDA0NTc5Nn0.WyvuOzLN8NEM9tKgjY2a70KU9XVGeYYufhIDs35gGPg"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "Register"
        ],
        "summary": "Creates a new User",
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "name": "Test Name",
                "email": "test@email.com",
                "password": "testpass123"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id_user": 3,
                  "name": "Test Name",
                  "email": "test@email.com",
                  "password": "testpass123",
                  "isAdm": 0,
                  "createdAt": "2023-02-24T13:01:02.700Z",
                  "updatedAt": "2023-02-24T13:01:02.700Z"
                }
              }
            }
          },
          "400": {
            "description": "Request not understood, revise syntax"
          },
          "409": {
            "description": "Duplicated entry",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Usu치rio j치 existente"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "Admin",
          "User"
        ],
        "summary": "Returns a list of Users",
        "operationId": "getAllUser",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{id_user}": {
      "get": {
        "tags": [
          "User",
          "Admin"
        ],
        "summary": "Returns a User by ID",
        "operationId": "getOneUser",
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id_user": 3,
                  "name": "Test Name",
                  "email": "test@email.com",
                  "password": "testpass123",
                  "isAdm": 0,
                  "createdAt": "2023-02-24T13:01:02.700Z",
                  "updatedAt": "2023-02-24T13:01:02.700Z"
                }
              }
            }
          },
          "404": {
            "description": "Requested resource not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/category": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Returns all the Categories as an array of objects",
        "operationId": "getAllCategory",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayCategory"
                },
                "example": [
                  {
                    "id_category": 1,
                    "name": "Vestu치rio",
                    "createdAt": "2023-02-24T13:01:02.700Z",
                    "updatedAt": "2023-02-24T13:01:02.700Z"
                  },
                  {
                    "id_category": 2,
                    "name": "Games",
                    "createdAt": "2023-02-24T13:01:02.700Z",
                    "updatedAt": "2023-02-24T13:01:02.700Z"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Category",
          "Admin"
        ],
        "summary": "Creates a new Category",
        "operationId": "createCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              },
              "example": {
                "name": "Board Game"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                },
                "example": {
                  "id_category": 3,
                  "name": "Board Game",
                  "createdAt": "2023-02-24T13:01:02.700Z",
                  "updatedAt": "2023-02-24T13:01:02.700Z"
                }
              }
            }
          },
          "400": {
            "description": "Request not understood, revise syntax"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "409": {
            "description": "Duplicated entry",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "categoria j치 existente"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/category/{id_category}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Returns a Category by ID",
        "operationId": "getOneCategory",
        "parameters": [
          {
            "name": "id_category",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                },
                "example": {
                  "id_category": 1,
                  "name": "Jogos de Tabuleiro",
                  "createdAt": "2023-02-24T13:01:02.700Z",
                  "updatedAt": "2023-02-24T13:01:02.700Z"
                }
              }
            }
          },
          "404": {
            "description": "Requested resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "Category",
          "Admin"
        ],
        "summary": "Updates a Category by ID",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id_category",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              },
              "example": {
                "name": "Board Game"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A JSON Category object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                },
                "example": {
                  "id_category": 1,
                  "name": "Board Game",
                  "createdAt": "2023-02-24T13:01:02.700Z",
                  "updatedAt": "2023-02-25T13:01:02.700Z"
                }
              }
            }
          },
          "400": {
            "description": "Request not understood, revise syntax"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "Requested resource not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Category",
          "Admin"
        ],
        "summary": "Deletes a Category by ID",
        "operationId": "removeCategory",
        "parameters": [
          {
            "name": "id_category",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Request recieved and understood, but no need to send data back"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "Requested resource not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "id_category": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ArrayCategory": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Category"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id_user": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "scope": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "example": {
          "email": "admin@admin.com",
          "password": "admin123"
        }
      },
      "Error": {
        "type": "string",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}